//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StudentEntities : DbContext
    {
        public StudentEntities()
            : base("name=StudentEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Student> Student { get; set; }
    
        public virtual ObjectResult<SpGetStudentById_Result> SpGetStudentById(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetStudentById_Result>("SpGetStudentById", studentIdParameter);
        }
    
        public virtual int SpStudentDel(Nullable<int> studentId, ObjectParameter returnMessage)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpStudentDel", studentIdParameter, returnMessage);
        }
    
        public virtual int SpStudentIns(string firstName, string middleName, string lastName, string faculty, string phone, string email, ObjectParameter returnMessage)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var facultyParameter = faculty != null ?
                new ObjectParameter("Faculty", faculty) :
                new ObjectParameter("Faculty", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpStudentIns", firstNameParameter, middleNameParameter, lastNameParameter, facultyParameter, phoneParameter, emailParameter, returnMessage);
        }
    
        public virtual ObjectResult<SpStudentSel_Result> SpStudentSel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpStudentSel_Result>("SpStudentSel");
        }
    
        public virtual int SpStudentUpd(Nullable<int> studentId, string firstName, string middleName, string lastName, string faculty, string phone, string email, ObjectParameter returnMessage)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var facultyParameter = faculty != null ?
                new ObjectParameter("Faculty", faculty) :
                new ObjectParameter("Faculty", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpStudentUpd", studentIdParameter, firstNameParameter, middleNameParameter, lastNameParameter, facultyParameter, phoneParameter, emailParameter, returnMessage);
        }
    }
}
